#!/usr/bin/env python3.6

#------------------------------------------------------------------------------
# Project Name      - PythonProjects/source/groupfix
# Started On        - Mon  3 Jul 17:22:31 BST 2023
# Last Change       - Thu 27 Jul 23:30:21 BST 2023
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Output a suitable command for adding back users which were accidentally
# blasted away by using `-G` with usermod(8) without `-a` to append the
# group(s). This will parse a logfile for the names, in order to generate the
# command.
#
# This only works based on how the system was initially installed, because it's
# the installation 'syslog' file which is parsed for the group names. This will
# unfortunately not be suitable for everyone.
#
# If you only have sudo(8) for getting 'root' access, such as on systems based
# on Ubuntu, and you only have the one sudo(8)-enabled user, then you'll
# probably need to otherwise gain such access, such as via Recovery Mode, a
# Live CD/USB, or a CD/USB of a utility like CloneZilla.
#
# No changes are made; that's intentionally left to the user.
#
# Usage: groupfix [-f FILE] USER
#
# Dependencies:
#
#   python (>= 3.6)
#------------------------------------------------------------------------------

import os, sys, subprocess

File = '/var/log/installer/syslog'

if len(sys.argv) <= 1:
	print(f"Err: Username required.", file = sys.stderr)
	sys.exit(1)

sys.argv = sys.argv[1:]
while len(sys.argv) > 0:
	if sys.argv[0] in ('-f', '--file'):
		Flag = sys.argv[0]
		sys.argv = sys.argv[1:]
		if os.path.isfile(sys.argv[0]):
			File = sys.argv[0]
		else:
			print(f"Err: Option {Flag} requires FILE.", file = sys.stderr)
			sys.exit(1)
	elif sys.argv[0][0] != '-':
		break

	sys.argv = sys.argv[1:]

if len(sys.argv) == 1:
	User = sys.argv[0]
else:
	print(f"Err: Option {Flag} requires 'syslog'-type file.", file = sys.stderr)
	sys.exit(1)

try:
	Lines = []
	with open(File, 'rt') as FH:
		Lines = map(str.rstrip, FH.readlines())
except FileNotFoundError:
	print(f"Err: File '{File}' not found.", file = sys.stderr)
	sys.exit(1)
except PermissionError:
	print(f"Err: File '{File}' inaccessible.", file = sys.stderr)
	sys.exit(1)

Groups = []
for Line in Lines:
	Line = Line.rstrip()

	if f'user-setup: Adding user `{User}\' to group' in Line:
		Groups.append(Line.split()[-2][1:-1])

if len(Groups) == 0:
	print(f"Err: Unable to gather groups.", file = sys.stderr)
	sys.exit(1)

print(f"usermod -G {','.join(Groups)} {User}")
