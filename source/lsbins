#!/usr/bin/env python3.6

#------------------------------------------------------------------------------
# Project Name      - PythonProjects/source/lsbins
# Started On        - Sat 28 Nov 02:02:41 GMT 2020
# Last Change       - Sat 28 Nov 03:43:53 GMT 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Features:
#
# N/A
#
# Bugs:
#
#TODO: DoMatch() isn't working, for some reason.
#
# A Python 3.6 re-write of Perl-written LSBins, originally written in Shell.
#
# Extened Regular Expressions are always enabled in this Python re-write.
#
# Dependencies:
#
#   man-db (>= 2.8.3-2)
#   python3.6 (>= 3.6.9)
#------------------------------------------------------------------------------
import os
import os.path
import sys
import re
import subprocess
import textwrap

version = '2020-11-28'
program = 'lsbins'


def usage():
    print(textwrap.dedent(f'''Usage: {argv[0]} [OPTS] [MATCH]

        -h, --help               - Display this help information.
        -v, --version            - Output the version datestamp.
        -N, --nodescribe         - Omit the short description.
        -a, --show-all           - Show alternative descriptions.
        -i, --ignore-case        - Search case-insensitively.\
    '''))


def fprintf(code, msg):
    """Prints 'msg' to stderr and exits with exit code 'code'."""
    print(f'ERROR: {msg}', file=stderr)
    sys.exit(code)


def do_match(fname, target):
    """Checks if 'fname' matches the target provided by the user."""
    return re.match(target, fname, flags=(re.IGNORECASE if case_insen else 0)) is not None


no_describe  = False
case_insen   = False
ext_reg      = False
show_all     = False
match_target = ''

# Parse args
for arg in sys.argv[1:]:
    if re.match('^(--help|-h)$', arg):
        usage()
        sys.exit(0)
    elif re.match('^(--version|-v)$', arg):
        print(version)
        sys.exit(0)
    elif re.match('^(--ignore-case|-i)$', arg):
        case_insen = True
    elif re.match('^(--nodescribe|-N)$', arg):
        no_describe = True
    elif re.match('^(--show-all|-a)$', arg):
        show_all = True
    elif re.match('^\w+$', arg): # only first non-option is taken into account
        match_target = arg
        break

if not match_target: # might want to skip this check to make an empty string match everything
    fprintf(1, "Missing MATCH argument")

executables = set() # use a set to avoid duplicates
for entry in os.getenv('PATH').split(':'):
    if os.path.isdir(entry):
        for file in os.listdir(entry):
            fpath = os.path.join(entry, file)
            if os.path.isfile(fpath) and os.access(fpath, os.X_OK):
                executables.add(fpath.split('/')[-1])

if no_describe:
    for fname in executables:
        if do_match(fname, match_target):
            print(fname)
elif 'man' in executables:
    for fname in executables:
        if do_match(fname, match_target):
            try:
                data = str(subprocess.check_output(f'man -f {fname} 2>/dev/null', shell=True), 'utf-8')
                print(f'{fname} - {data.split("-")[-1].strip()}')
            except subprocess.CalledProcessError:
                print(f'{fname} does not have a description...')
